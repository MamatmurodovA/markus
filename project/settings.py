"""
Django settings for markus project.

Generated by 'django-admin startproject' using Django 1.11.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from django.core.urlresolvers import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e(1xn_n$j!d3$kg6t^)w+yy&)ncs1kxq6%wveov&nyv-+cz2k7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition
CUSTOM_APPS = [
    'users',
    'main',
    'restapp',
    'promotion',
    'payment',
]

THIRD_PARTY_APPS = [
    'mptt',
    'ckeditor',
    'widget_tweaks',
    'django_filters',
    'crispy_forms',
    'rest_framework_recursive',
    'pyfcm',
    'django_extensions',
]


INSTALLED_APPS = [
    # Third-party
    'djcelery',
    'djcelery_email',
    'rest_framework',
    'rest_framework_swagger',
    'rest_framework.authtoken',
    # Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
] + CUSTOM_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.context.custom_context.notifications',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'markus',
        'USER': 'markus',
        'PASSWORD': 'markus',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGIN_URL = reverse_lazy('users:login_page')
LOGIN_REDIRECT_URL = reverse_lazy('main:reviews', kwargs={'review_type': 'latest'})

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_URL = "/static/"

STATIC_ROOT = os.path.join(BASE_DIR, "assets")

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


MEDIA_URL  = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


AUTH_USER_MODEL = 'users.User'

GEOPOSITION_GOOGLE_MAPS_API_KEY = 'AIzaSyC8HUyhJrNsnRqqUNkK4mCVIJnClVoazBQ'

REST_FRAMEWORK = {
    'PAGE_SIZE': 15,
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.SearchFilter',
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework.renderers.TemplateHTMLRenderer',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'api_key': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization'
        }
    },
    'USE_SESSION_AUTH': True,
    'JSON_EDITOR': True,
}

# FCM__OLD_APIKEY = 'AAAAUEJfAk8:APA91bGztSCqu2jAn0Bahkx61X1Go24MimQai3nXzR3PMiLrimSFo5Bf7olDfh2G9jlIr-jp9q-6EP5yOtoU_0rS5Vg0QbMg69cqTmDiUILv0BHAcBEn7ro2Q7dvnXzY0V9z9COfnCtN'
FCM_APIKEY = 'AAAA7XLGlc4:APA91bF0xhRrffAvQfTi-kXHQMcAqV4iZyb7KmtB4vhXWle766M1OPBazld0nwPbj3th1MsvvsJiYqpIgZlJyM5Bba-8rY0wvLFpxC8tdpXWxT3NldOBKYnkzIlyZMzud6N7Q2ABuACQ'

INTERNAL_IPS = [
    '127.0.0.1',
]


CELERY_BROKER_URL = 'amqp://localhost'


EMAIL_HOST = 'smtp.mail.ru'
EMAIL_PORT = 587

EMAIL_HOST_USER = 'noreply@markus.uz'
DEFAULT_FROM_EMAIL = 'noreply@markus.uz'
EMAIL_HOST_PASSWORD = '$Q8xIGgOyyh1'
EMAIL_USE_TLS = True

EMAIL_BACKEND = 'djcelery_email.backends.CeleryEmailBackend'
